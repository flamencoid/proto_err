
Welcome to proto_err's documentation!
*************************************


"proto_err" -- Main package
===========================


"proto_err.simulation" -- Simulating Error Reads
------------------------------------------------

class class proto_err.simulation.complexError(record, opt, id)

   Bases: "proto_err.simulation.simulateError"

   error()

      Function to induce and error

class class proto_err.simulation.simulateError(record, opt, id)

   Class of objects to simulate errors in a SeqRecord

   deletion(pos, dlen)

      function to induce a deletion

   indel(pos)

      function to induce an INDEL

   ins(pos, rl)

      function to induce a insertion

   qscore None

   record None

      Return a Bio.SeqRecord

   snp(pos, rl)

      function to induce a SNP

class class proto_err.simulation.singleSNP(record, opt, id)

   Bases: "proto_err.simulation.simulateError"

   error()

      Function to induce and error

proto_err.simulation.subsample(ref, opt, errorSimulator=<class proto_err.simulation.complexError at 0x10540fc18>)

   Function to take a fasta file subsample reads and generate a list
   of  subsampled reads


"proto_err.errorCount" -- Error Counting
----------------------------------------

class class proto_err.errorCount.counter(ref, errorList=None, samfile=None, opt=None)

   Takes a list of errors and does some kmer counting

   countAlignedBases(read)

   countErrorKmer(maxKmerLength=None)

      Function which takes a list of errors and counts the kmers
      before   and after and error

   countRefKmer(maxKmerLength=None)

      Function to count all kmers in long sequence (reference) of
      length kmerLen or below

   getCount(truth=None, emission=None, kmer='', after=False)

      Gets the count for a given {truth,emmision,kmer}

   kmerFreq(seq, kmer)

      Function to calculate the number of times a kmer appears in a
      sequence

   readDiff(read, ref)

   setup(opt)

      Function to set up dictionary structure for outputed stats

class class proto_err.errorCount.error(true, emission, read, readPos)

   Information about the errors in a read

   after(j)

      Return the following j bases,return N when bases missing

   before(j)

      Return the preceding j bases,return N when bases missing

   emissionSeq None

      Sequence emmited

   errorType None

   isDeletion None

      Is the error a deletion

   isIndel None

      Is the error an INDEL

   isInsertion None

      Is the error an insertion

   isSnp None

      Is the error a SNP

   qscore(i)

      Return the quality score at a base +i i from the error start
      position

   qual None

      Quality score of error base

   trueSeq None

      Sequence of the truth

class class proto_err.errorCount.errorReader(samfile, ref)

   Iterable over errors in aligned reads

   checkDeletion(N)

   checkHardClipped(N)

   checkInsertion(N)

   checkPadding(N)

   checkRead()

      A function which take a read and generates some error objects

   checkSNPs(N)

   checkSeqMismatch(N)

   checkSkipped(N)

   checkSoftClipped(N)

   next()

   readNext()

   refRead None

      Function to return the reference sequence a read is aligned to


Indices and tables
******************

* *Index*

* *Module Index*

* *Search Page*
